import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'screens/chats_screen.dart';
import 'screens/contacts_screen.dart';
import 'screens/settings_screen.dart';
import 'screens/notes_screen.dart'; // –≠–∫—Ä–∞–Ω –∑–∞–º–µ—Ç–æ–∫
import 'firebase_options.dart';

/// –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  print("üöÄ –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase...");
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
    await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
    print("‚úÖ Firebase —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!");
  } catch (e) {
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: $e");
  }

  // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  runApp(MyApp());
}

/// –û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥–∂–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
        scaffoldBackgroundColor: Colors.grey[200],
      ),
      supportedLocales: [
        Locale('en', 'US'), // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
        Locale('ru', 'RU'), // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ
      ],
      localizationsDelegates: [
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
      locale: Locale('ru', 'RU'), // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Ä—É—Å—Å–∫–∏–π)
      home: AuthWrapper(), // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å (–ª–æ–≥–∏–Ω –∏–ª–∏ –¥–æ–º–∞—à–Ω—é—é)
    );
  }
}

/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–º–∞—à–Ω–∏–π —ç–∫—Ä–∞–Ω
class AuthWrapper extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(), // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return Scaffold(body: Center(child: CircularProgressIndicator())); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        }

        if (snapshot.hasData) {
          return HomeScreen(); // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–∞—à–Ω–∏–π —ç–∫—Ä–∞–Ω
        } else {
          return LoginScreen(); // –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞
        }
      },
    );
  }
}

/// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> with SingleTickerProviderStateMixin {
  int _selectedIndex = 0; // –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏
  late PageController _pageController; // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü

  final List<Widget> _screens = [
    ChatsScreen(),
    ContactsScreen(),
    SettingsScreen(),
    NotesScreen(),  // –≠–∫—Ä–∞–Ω –∑–∞–º–µ—Ç–æ–∫
  ];

  @override
  void initState() {
    super.initState();
    _pageController = PageController(initialPage: _selectedIndex);
  }

  /// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ —Ç–∞–ø—É –≤ BottomNavigationBar
  void _onItemTapped(int index) {
    _pageController.animateToPage(index, duration: Duration(milliseconds: 300), curve: Curves.easeInOut);
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –ø—Ä–∏ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–∏
  void _onPageChanged(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: PageView(
          controller: _pageController,
          onPageChanged: _onPageChanged,
          children: _screens,
        ),
        bottomNavigationBar: BottomNavigationBar(
            items: [
        BottomNavigationBarItem(icon: Icon(Icons.chat_bubble), label: "–ß–∞—Ç—ã"),
    BottomNavigationBarItem(icon: Icon(Icons.contacts), label: "–ö–æ–Ω—Ç–∞–∫—Ç—ã"),
    BottomNavigationBarItem(icon: Icon(Icons.settings), label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
              BottomNavigationBarItem(icon: Icon(Icons.note), label: "–ó–∞–º–µ—Ç–∫–∏"),  // –í–∫–ª–∞–¥–∫–∞ –¥–ª—è –∑–∞–º–µ—Ç–æ–∫
            ],
          currentIndex: _selectedIndex,
          onTap: _onItemTapped,
          selectedItemColor: Colors.blueAccent,
          unselectedItemColor: Colors.grey,
        ),
    );
  }
}

/// –≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google
class LoginScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: ElevatedButton.icon(
          icon: Icon(Icons.login),
          label: Text("–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google"),
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.blueAccent,
            foregroundColor: Colors.white,
            padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
          ),
          onPressed: () async {
            try {
              print("üü° –ù–∞—á–∞–ª–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Google...");

              // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—Ö–æ–¥–∞ Google
              final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();
              if (googleUser == null) {
                print("‚ùå –í—Ö–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º");
                return;
              }

              // –ü–æ–ª—É—á–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google
              final GoogleSignInAuthentication googleAuth = await googleUser.authentication;
              final AuthCredential credential = GoogleAuthProvider.credential(
                accessToken: googleAuth.accessToken,
                idToken: googleAuth.idToken,
              );

              // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase
              final UserCredential userCredential =
              await FirebaseAuth.instance.signInWithCredential(credential);
              var user = userCredential.user;

              if (user != null) {
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª: ${user.email}");

                // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore
                await FirebaseFirestore.instance.collection('users').doc(user.uid).set({
                  'email': user.email,
                  'uid': user.uid,
                  'blacklist': [],
                }, SetOptions(merge: true));
              }
            } catch (e) {
              print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google: $e");
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(content: Text("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: $e")),
              );
            }
          },
        ),
      ),
    );
  }
}